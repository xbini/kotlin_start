jooq {
    version(project.ext.jooqVersion)
    configurations {
        main {
            generateSchemaSourceOnCompilation = true

            generationTool {
//                logging = Logging.WARN
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = project.ext.dbUrl
                    user = project.ext.dbUser
                    password = project.ext.dbPassword
                    properties {
                        property {
                            key = 'ssl'
                            value = 'false'
                        }
                    }
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = project.ext.dbSchema
                        forcedTypes {
                            forcedType {
                                name = 'varchar'
                                includeExpression = '.*'
                                includeTypes = 'JSONB?'
                            }
                            forcedType {
                                name = 'varchar'
                                includeExpression = '.*'
                                includeTypes = 'INET'
                            }
                        }
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
                        packageName = 'kotlin_start.jooq'
                        directory = 'src/main/kotlin/kotlin_start/jooq'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}
